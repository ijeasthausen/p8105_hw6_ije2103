---
title: "p8105_hw6_ije2103"
author: "Imaani Easthausen & MeOak Place"
date: "November 14, 2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(plotly)
library(ggridges)
library(stringr)
library(forcats)
library(ggplot2)
```
#Introduction
For this project, we will work with a subset of the NYC restaurant inspections dataset accessed from https://dev.socrata.com/foundry/data.cityofnewyork.us/9w7m-hzhe in October 2017.
We will limit the data to restarants with an inspection grade of "A," "B," or "C," and with known borough.
```{r}
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
```
Below we present boxplots of the distributions of inspection scores by borough. We observe that accross all boroughs the data are substantially right skewed.
```{r}
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
```
Below we present a plot showing the frequency of "A," "B," and "C" grades received in each borough.
```{r}
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
```
Below, we present a time series plot showing the inspection score over time for each restaurant where one line represents one restaurant. We observe substantial instability in inspection score over time. Baseline inspection score does not appear to predict future inspection score.
```{r}
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
```
---
title: "Untitled"
output:
flexdashboard::flex_dashboard:
orientation: row
runtime: shiny
---
```{r setup, include=FALSE}
library(flexdashboard)
library(tidyverse)
library(janitor)
library(stringr)
library(forcats)
library(viridis)
library(plotly)
library(shiny)
```
```{r}
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
```
Column {.sidebar}
-----------------------------------------------------------------------
```{r}
boros = restaurant_inspections %>% distinct(boro) %>% pull()
# selectInput widget
selectInput("boro_choice", label = h3("Select boro"),
choices = boros, selected = "Manhattan")
```
Row
-----------------------------------------------------------------------
### Chart A
```{r}
renderPlotly({
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
})
```
Row {.tabset .tabset-fade}
-----------------------------------------------------------------------
### Chart B
```{r}
renderPlotly({
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
})
```
### Chart C
```{r}
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
```
library(flexdashboard)
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
