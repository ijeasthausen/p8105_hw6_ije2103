```
Column {data-width=650}
-----------------------------------------------------------------------
### Chart A
```{r}
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
```
Column {data-width=350}
-----------------------------------------------------------------------
### Chart B
```{r}
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
```
### Chart C
```{r}
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
```
library(flexdashboard)
library(tidyverse)
library(tidytext)
library(curl)
library(data.table)
library(dplyr)
library(DT)
library(forcats)
library(ggplot2)
library(ggridges)
library(ggthemes)
library(haven)
library(htmltools)
library(httr)
library(janitor)
library(jsonlite)
library(knitr)
library(knitLatex)
library(magrittr)
library(readr)
library(readxl)
library(reshape2)
library(rvest)
library(stringr)
library(tools)
library(viridisLite)
library(viridis)
library(flexdashboard)
library(tidyverse)
library(janitor)
library(stringr)
library(forcats)
library(viridis)
library(plotly)
library(shiny)
library(magrittr)
library(tidyverse)
library(tidytext)
library(curl)
library(data.table)
library(dplyr)
library(DT)
library(forcats)
library(ggplot2)
library(ggridges)
library(ggthemes)
library(haven)
library(htmltools)
library(httr)
library(janitor)
library(jsonlite)
library(knitr)
library(knitLatex)
library(magrittr)
library(readr)
library(readxl)
library(reshape2)
library(rvest)
library(stringr)
library(tools)
library(viridisLite)
library(viridis)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(plotly)
library(ggridges)
library(stringr)
library(forcats)
library(ggplot2)
library(magrittr)
library(tidyverse)
library(tidytext)
library(curl)
library(data.table)
library(dplyr)
library(DT)
library(forcats)
library(ggplot2)
library(ggridges)
library(ggthemes)
library(haven)
library(htmltools)
library(httr)
library(janitor)
library(jsonlite)
library(knitr)
library(knitLatex)
library(magrittr)
library(readr)
library(readxl)
library(reshape2)
library(rvest)
library(stringr)
library(tools)
library(viridisLite)
library(viridis)
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
boros = restaurant_inspections %>% distinct(boro) %>% pull()
inputPanel(boros)
selectInput("boro_choice", label = h3("Select boro"),
choices = boros, selected = "Manhattan")
---
title: "Untitled"
output:
flexdashboard::flex_dashboard:
orientation: row
runtime: shiny
---
```{r setup, include=FALSE}
library(flexdashboard)
library(tidyverse)
library(janitor)
library(stringr)
library(forcats)
library(viridis)
library(plotly)
library(shiny)
```
```{r}
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
```
Column {.sidebar}
-----------------------------------------------------------------------
```{r}
boros = restaurant_inspections %>% distinct(boro) %>% pull()
# selectInput widget
selectInput("boro_choice", label = h3("Select boro"),
choices = boros, selected = "Manhattan")
```
Row
-----------------------------------------------------------------------
### Chart A
```{r}
renderPlotly({
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
})
```
Row {.tabset .tabset-fade}
-----------------------------------------------------------------------
### Chart B
```{r}
renderPlotly({
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
})
```
### Chart C
```{r}
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
```
---
title: "NYC Restaurant Inspections"
output:
flexdashboard::flex_dashboard:
orientation: columns
vertical_layout: fill
---
```{r echo = FALSE, include = FALSE, message = FALSE, results = FALSE, warning = FALSE}
library(flexdashboard)
library(tidyverse)
library(tidytext)
library(curl)
library(data.table)
library(dplyr)
library(DT)
library(forcats)
library(ggplot2)
library(ggridges)
library(ggthemes)
library(haven)
library(htmltools)
library(httr)
library(janitor)
library(jsonlite)
library(knitr)
library(magrittr)
library(plotly)
library(readr)
library(readxl)
library(reshape2)
library(rvest)
library(stringr)
library(tools)
library(viridisLite)
library(viridis)
```
```{r echo = FALSE, message = FALSE, results = FALSE, warning = FALSE}
set.seed(1)
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
#filtered to keep sample manageable for plotly
#can also code price > 100 & price < 400
```
Column {data-width=650}
-----------------------------------------------------------------------
### Scatterplot
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
```
Column {data-width=350}
-----------------------------------------------------------------------
### Boxplot
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
```
### Barchart
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
```
---
title: "NYC Restaurant Inspections"
output:
flexdashboard::flex_dashboard:
orientation: columns
vertical_layout: fill
---
```{r echo = FALSE, include = FALSE, message = FALSE, results = FALSE, warning = FALSE}
library(flexdashboard)
library(tidyverse)
library(tidytext)
library(curl)
library(data.table)
library(dplyr)
library(DT)
library(forcats)
library(ggplot2)
library(ggridges)
library(ggthemes)
library(haven)
library(htmltools)
library(httr)
library(janitor)
library(jsonlite)
library(knitr)
library(magrittr)
library(plotly)
library(readr)
library(readxl)
library(reshape2)
library(rvest)
library(stringr)
library(tools)
library(viridisLite)
library(viridis)
```
```{r echo = FALSE, message = FALSE, results = FALSE, warning = FALSE}
set.seed(1)
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
#filtered to keep sample manageable for plotly
#can also code price > 100 & price < 400
```
Column {data-width=650}
-----------------------------------------------------------------------
### Scatterplot
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
```
Column {data-width=350}
-----------------------------------------------------------------------
### Boxplot
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
```
### Barchart
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
```
---
title: "NYC Restaurant Inspections"
output:
flexdashboard::flex_dashboard:
orientation: columns
vertical_layout: fill
---
```{r echo = FALSE, include = FALSE, message = FALSE, results = FALSE, warning = FALSE}
library(flexdashboard)
library(tidyverse)
library(tidytext)
library(curl)
library(data.table)
library(dplyr)
library(DT)
library(forcats)
library(ggplot2)
library(ggridges)
library(ggthemes)
library(haven)
library(htmltools)
library(httr)
library(janitor)
library(jsonlite)
library(knitr)
library(magrittr)
library(plotly)
library(readr)
library(readxl)
library(reshape2)
library(rvest)
library(stringr)
library(tools)
library(viridisLite)
library(viridis)
```
```{r echo = FALSE, message = FALSE, results = FALSE, warning = FALSE}
set.seed(1)
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
#filtered to keep sample manageable for plotly
#can also code price > 100 & price < 400
```
Column {data-width=650}
-----------------------------------------------------------------------
### Boxplot
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
```
Column {data-width=350}
-----------------------------------------------------------------------
### Barchart
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
```
### Scatterplot
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
```
---
title: "NYC Restaurant Inspections"
output:
flexdashboard::flex_dashboard:
orientation: columns
vertical_layout: fill
---
```{r echo = FALSE, include = FALSE, message = FALSE, results = FALSE, warning = FALSE}
library(flexdashboard)
library(tidyverse)
library(tidytext)
library(curl)
library(data.table)
library(dplyr)
library(DT)
library(forcats)
library(ggplot2)
library(ggridges)
library(ggthemes)
library(haven)
library(htmltools)
library(httr)
library(janitor)
library(jsonlite)
library(knitr)
library(magrittr)
library(plotly)
library(readr)
library(readxl)
library(reshape2)
library(rvest)
library(stringr)
library(tools)
library(viridisLite)
library(viridis)
```
```{r echo = FALSE, message = FALSE, results = FALSE, warning = FALSE}
set.seed(1)
restaurant_inspections = read_csv("DOHMH_New_York_City_Restaurant_Inspection_Results.csv.gz",
col_types = cols(building = col_character()),
na = c("NA", "N/A")) %>%
filter(grade %in% c("A", "B", "C"), boro != "Missing") %>%
mutate(boro = str_to_title(boro))
#filtered to keep sample manageable for plotly
#can also code price > 100 & price < 400
```
Column {data-width=650}
-----------------------------------------------------------------------
### Boxplot
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(boro) %>%
plot_ly(y = ~score, color = ~boro, type = "box")
```
Column {data-width=350}
-----------------------------------------------------------------------
### Barchart
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(boro) %>%
count(grade) %>%
ungroup() %>%
mutate(boro = fct_reorder(boro, n)) %>%
plot_ly(x = ~boro, y = ~n, color = ~grade, type = "bar")
```
### Scatterplot
```{r echo = FALSE, message = FALSE, results = TRUE, warning = FALSE}
restaurant_inspections %>%
group_by(camis) %>%
filter(!duplicated(inspection_date)) %>%
select(camis, inspection_date, score) %>%
plot_ly(x = ~inspection_date, y = ~score, group_by = ~camis,
type = 'scatter',
alpha = 0.25,
mode = 'lines+markers') %>%
layout(xaxis = list(range = c(as.Date('2012-01-01'), as.Date('2019-01-01'))))
```
